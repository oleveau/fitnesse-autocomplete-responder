stages:
  - build
  - sonar
  - release
  - update-version

variables:
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
  PROJECT_NAME: "fitnesse-autocomplete-responder"

cache:
  key: one-key-to-rule-them-all
  paths:
    - .m2/repository

build:
  stage: build
  script: mvn $MAVEN_CLI_OPTS test
  image: "maven:3.6.0-jdk-8-alpine"
  tags:
    - mvn
  artifacts:
    name: $PROJECT_NAME
    expire_in: 1 hour
    paths:
      - target/*
  except:
    - development
    - master

sonar:
  stage: sonar
  script: mvn sonar:sonar -Dsonar.projectKey=fitnesse-autocomplete-responder -Dsonar.host.url=$SONAR_ENDPOINT -Dsonar.login=$SONAR_LOGIN
  image: "maven:3.6.0-jdk-8-alpine"
  tags:
    - mvn
  except:
    - development
    - master

release:
  stage: release
  script:
    - export GNUPGHOME=.gnupg
    - echo "${GPG_KEY}" | gpg --batch --import
    - mvn $MAVEN_CLI_OPTS versions:set -DremoveSnapshot
    - mvn $MAVEN_CLI_OPTS -P release -DskipTests -Dgpg.passphrase=${GPG_PASS} deploy
  image: "maven:3.6.0-jdk-8-alpine"
  artifacts:
    name: $PROJECT_NAME
    expire_in: 1 week
    paths:
      - target/*
  only:
    - master
  tags:
    - mvn

update-version:
  stage: update-version
  image: "maven:3.6.0-jdk-8-alpine"
  script:
    - git checkout -B "$CI_BUILD_REF_NAME"
    - mvn -B $MAVEN_CLI_OPTS release:update-versions -DautoVersionSubmodules=true
    - git add '*pom.xml'
    - git commit -m "update version [ci skip]"
    - git push https://$MACMINI_USER:$MACMINI_PASS@gitlab.com/praegus/toolchain-fixtures/fitnesse-autocomplete-responder.git
  only:
    - master
  tags:
    - mvn
